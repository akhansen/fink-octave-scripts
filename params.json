{"name":"Fink-octave-scripts","tagline":"Build, install, post-install, and pre-remove scripts for Fink's Octave Forge packages.","body":"# fink-octave-scripts\r\n\r\nWritten by Alexander Hansen <alexkhansen@users.sourceforge.net>.\r\n\r\nBased on  script designs by Johnathan Stickel.\r\n\r\nSee the **COPYING** file for license information.\r\n\r\n_fink-octave-scripts_ contains convenience scripts to make maintaining the various\r\nOctave Forge (OF) (or whatever they ultimately call them) packages in Fink easier.\r\n\r\n## Scripts \r\n\r\nThis package consists of the following scripts:\r\n\r\n* **octave-forge-patch.sh**:  \r\nThis is the master script, generated at install time from **octave-forge-patch.sh.in**\r\nby substituting in the Fink prefix.  This script generates shell and Octave compile, \r\ninstall, post-install, and pre-remove scripts for each OF package at build time from \r\ntemplates installed by _this_ package.  The post-install and pre-remove scripts are needed\r\nat .deb install and remove time, so  they are installed in the OF package, to be run in \r\nthe `PostInstScript` or `PreRmScript`, respectively.\r\n\r\n* **genmkoctfile.sh.in**:  Template for the compile phase shell script **genmkoctfile.sh**,\r\nwhich is used to generate **mkoctfile-3XY-gcc4.N** and **mkoctfile-gcc4.N** executables \r\nwhen a gcc4N different than that which Octave was built with is required.  It takes the\r\nmajor version of the compiler, e.g. 4.8, as an argument.\r\n\r\n* **octave-forge-compile-(3.0.5|3.4.3).sh.in**:  Template for the compile phase shell script.\r\nOne of these gets converted by **octave-forge-patch.sh** to **octave-forge-compile.sh**; \r\nwhich one depends on the Octave version the package is being installed for--Octave 3.4.0 \r\nand later only support installation from an archive. **octave-forge-compile.sh** performs\r\nsome file system operations and creates a post-patch tarball if installing for \r\nOctave-3.4.3 or later, then invokes **octave-forge-comp**.\r\n\r\n* **octave-forge-comp-(3.0.5|3.4.3).in**:  Template for the compile phase Octave script. One \r\nof these gets converted to **octave-forge-comp**; again, which one depends on the Octave \r\nversion the package is being installed for.  This runs the package's internal build \r\nprocedure and installs it in a temporary location ( **%b../bld** ) with a temporary database \r\n( **bld/share/octave/\\<octave version\\>/octave\\_packages** ).\r\n\r\n* **octave-forge-install.sh.in**:  Template for the install phase shell script\r\n**octave-forge-install.sh**, which does the install phase filesystem operations, \r\nincluding copying the installed files over to the  .deb root directory ( **%i** ) as well as \r\ninvoking **octave-forge-inst**.\r\n\r\n* **octave-forge-inst.in**:  Template for the install phase Octave script \r\n**octave-forge-inst**, which changes the path information in \r\n**%i/share/octave/\\<octave version\\>/octave_packages** to match where the\r\nfiles will actually be installed.\r\n\r\n* **octave-forge-postinst.sh.in**:  Template for the shell script **octave-forge-postinst.sh**\r\nwhich is called by the PostInstScript, which verifies whether the global Octave \r\npackage database ( **%p/var/octave/\\<octave version\\>/octave\\_packages** ) is a regular file of \r\nnonzero size, and therefore presumably a valid Octave database file.  If not, we remove the\r\nexisting file (in case it's a directory) and copy \r\n**%p/share/octave/\\<octave version\\>/octave_packages** over it.  If not, we run \r\n**octave-forge-postinst**.\r\n\r\n* **octave-forge-postinst.in**:  Template for the post-install Octave script \r\n**octave-forge-postinst**, which appends the information from \r\n**%p/share/octave/\\<octave version\\>/octave\\_packages** into \r\n**%p/var/octave/\\<octave version\\>/octave\\_packages**.\r\n\r\n* **octave-forge-prerm.sh.in**:  Template for the shell script **octave-forge-prerm.sh**\r\nwhich is called by the PreRmScript and runs **octave-forge-postinst**.\r\n\r\n* **octave-forge-prerm**:  Template for the post-install Octave script **octave-forge-prerm**,\r\nwhich removes the package's entry from global Octave package database.\r\n\r\n## Usage:\r\n\r\nThese scripts should be used in a .info file as follows:\r\n\r\n    CompileScript: <<\r\n    # $pkgsrc is typically either \"%type_raw[forge]\" or \"%type_raw[forge]-%v\"\r\n\t\r\n\tpkgsrc=%type_raw_forge\r\n\t\r\n    %p/share/fink-octave-scripts/octave-forge-patch.sh %type_raw[forge] %v %type_raw[oct] %b %i $pkgsrc\r\n\r\n\t# if the package needs an alternate mkoctfile, then\r\n\t# ./genmkoctfile.sh\r\n\t# export PATH=\"%b/bin:$PATH\"\r\n\t# and patch the build process to use e.g. mkoctfile-gcc4.N\r\n\r\n    # The above generates all of the other scripts appropriately for the package\r\n\r\n    ./octave-forge-compile.sh\r\n    <<\r\n\r\n    InstallScript: ./octave-forge-install.sh\r\n\r\n    PostInstScript:  %p/share/octave/%type_raw[oct]/%type_raw[forge]/octave-forge-postinst.sh\r\n\r\n    PreRmScript: %p/share/octave/%type_raw[oct]/%type_raw[forge]/octave-forge-prerm.sh\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}